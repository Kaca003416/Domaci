package domaci6;
//zadatak 13


import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class KorisnickiInterfejs extends javax.swing.JFrame {
    File fajl ;
    
    public KorisnickiInterfejs() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fc = new javax.swing.JFileChooser();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        otvoriArhivu = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ispitne statistike");

        jLabel1.setText("Skolska godina:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        otvoriArhivu.setText("Otvori arhivu");
        otvoriArhivu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otvoriArhivuActionPerformed(evt);
            }
        });

        jButton2.setText("Izracunaj statistike po predmetima");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(167, 167, 167))
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(otvoriArhivu, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(otvoriArhivu)
                    .addComponent(jButton2))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void otvoriArhivuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otvoriArhivuActionPerformed
            JFileChooser fc = new JFileChooser();       
            int povratna = fc.showOpenDialog(null);
        try {
            fajl = fc.getSelectedFile();
            System.out.print(fajl.getAbsolutePath());
            String putanja  = fajl.getAbsolutePath();
            if(povratna == JFileChooser.CANCEL_OPTION){
                 JOptionPane.showMessageDialog(jButton2 , "Pogrešno ste izabrali dokument!!!Pokušajte ponovo...");  
              } 
            if(fajl.length()==0){
            jTextArea1.setText("Nema prijava");
            }else{
            otvoriArhivu.setEnabled(false);
            jButton2.setEnabled(true);
            }
          
        } catch (Exception e) {
            System.out.print(e.getMessage());
             JOptionPane.showMessageDialog(jButton2 , "Pogrešno ste izabrali dokument!!!Pokušajte ponovo...");  
        }      
    }//GEN-LAST:event_otvoriArhivuActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            String naziv,godina,br,rok;
            Scanner sc = new Scanner(fajl);
            ArrayList<String[]> spisak = new ArrayList<String[]>();
  
                jTextArea1.setText("");  
                
                while(sc.hasNext()){
                    godina = sc.next();
                    naziv = sc.next();
                    br = sc.next();
                    rok = sc.next();
                    spisak.add(new String[]{godina,naziv,br,rok});
                    String s = "naziv_predmeta="+naziv+" naziv_roka="+rok+" br_prijavlenih="+br+" godina="+godina+"\n";
                    jTextArea1.append(s);
                    sc.nextLine();
                  }
                
                if(jTextField1.getText().equals("")){
                   int inf = 0,is=0,prog=0;
                    
                   for(int i=0;i<spisak.size();i++){
                       if(spisak.get(i)[1].equals("INF")){
                       inf+=Integer.parseInt(spisak.get(i)[2]);
                       }else if(spisak.get(i)[1].equals("IS")){
                        is+=Integer.parseInt(spisak.get(i)[2]);
                       }else if(spisak.get(i)[1].equals("PROG")){
                        prog+=Integer.parseInt(spisak.get(i)[2]);
                        }  
                   } 
                   System.out.println("\nINF: "+inf+"\n"+"IS: "+is+"\nPROG:"+prog+"\n");
                }else{
                    String uGod = jTextField1.getText();
                    boolean sadrziTrazenuGodinu = false;
                    for(int i=0;i<spisak.size();i++){
                        if(spisak.get(i)[0].contains(uGod)){
                        sadrziTrazenuGodinu = true;
                        break;
                        }
                    }
                    if(sadrziTrazenuGodinu){ 
//                    Collections.sort(spisak,new Comparator<String[]>() {
//                         public int compare(String[] strings, String[] otherStrings) {
//                    return strings[2].compareTo(otherStrings[2]);
//                }
//                       });
                      for(int i=0;i<spisak.size();i++){
                        if(spisak.get(i)[0].contains(uGod)){ 
                        jTextArea1.append("\n Sifra predmeta: "+spisak.get(i)[1]+" Broj prijavljenih: "+spisak.get(i)[2]);
                        }
                        }
                     
                    }else{
                    jTextArea1.setText("Nema prijava iz tražene godine! Pokušajte sa drugom godinom!");
                    }
                   
                    
                }
          //  }
        } catch (Exception e) {
        } 
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KorisnickiInterfejs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KorisnickiInterfejs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KorisnickiInterfejs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KorisnickiInterfejs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KorisnickiInterfejs().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fc;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton otvoriArhivu;
    // End of variables declaration//GEN-END:variables
}
